name: Build/Deploy to Registry Container

on:
  push:
    branches:
      - dev


env:
  DNSM: abrantedevops/network_services_structure:veridis-bind-master
  DNSL: abrantedevops/network_services_structure:veridis-bind-slave
  NGINXL: abrantedevops/network_services_structure:veridis-nginx-lan
  NGINXW: abrantedevops/network_services_structure:veridis-nginx-wan
  APACHE: abrantedevops/network_services_structure:statusquo-apache


jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Build Docker images
              run: |
                docker build -t ${{ env.DNSM }} ./isolated_environment/imagem_for_dockerhub_veridis/bind9
                docker build -t ${{ env.DNSL }} ./isolated_environment/imagem_for_dockerhub_veridis/bind9/slave
                docker build -t ${{ env.NGINXL }} ./isolated_environment/imagem_for_dockerhub_veridis/nginx/lan
                docker build -t ${{ env.NGINXW }} ./isolated_environment/imagem_for_dockerhub_veridis/nginx/wan
                docker build -t ${{ env.APACHE }} ./isolated_environment/imagem_for_dockerhub_statusquo/apache
        
    Test-Services:
        needs: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Run Dockerfile
              run: |
                docker-compose -f ./df-compose/veridis/docker-compose.yml up -d
                docker-compose -f ./df-compose/statusquo/docker-compose.yml up -d

            - name: Setup Python Version
              uses: actions/setup-python@v2
              with:
                python-version: 3.8
              
            - name: Execute Python Script
              run: |
                python ./test/tveridis.py
                python ./test/tstatusquo.py

    Vulnerability:
        needs: Test-Services
        if: ${{ needs.Test-Services.result == 'success' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install Trivy
              run: |
                wget https://github.com/aquasecurity/trivy/releases/download/v0.42.1/trivy_0.42.1_Linux-64bit.deb
                sudo dpkg -i trivy_0.42.1_Linux-64bit.deb

            - name: Scan Docker images
              run: |
                trivy image ${{ env.DNSM }}
                trivy image ${{ env.DNSL }}
                trivy image ${{ env.NGINXL }}
                trivy image ${{ env.NGINXW }}
                trivy image ${{ env.APACHE }}
        
    Push-Images:
        needs: Vulnerability
        if: ${{ needs.Vulnerability.result == 'success' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
        
            - name: Login to DockerHub
              uses: docker/login-action@v2.2.0
              with:
                username: ${{ secrets.USER }}
                password: ${{ secrets.PASS }}
        
            - name: Push Docker images DNSM
              uses: docker/build-push-action@v4
              with:
                push: true
                images:
                imageContext: ./isolated_environment/imagem_for_dockerhub_veridis/bind9
                tags: ${{ env.DNSM }}
            
            - name: Push Docker images DNSL
              uses: docker/build-push-action@v4
              with:
                push: true
                images:
                imageContext: ./isolated_environment/imagem_for_dockerhub_veridis/bind9/slave
                tags: ${{ env.DNSL }}

            - name: Push Docker images NGINXL
              uses: docker/build-push-action@v4
              with:
                push: true
                images:
                imageContext: ./isolated_environment/imagem_for_dockerhub_veridis/nginx/lan
                tags: ${{ env.NGINXL }}

            - name: Push Docker images NGINXW
              uses: docker/build-push-action@v4
              with:
                push: true
                images:
                imageContext: ./isolated_environment/imagem_for_dockerhub_veridis/nginx/wan
                tags: ${{ env.NGINXW }}

            - name: Push Docker images APACHE
              uses: docker/build-push-action@v4
              with:
                push: true
                images:
                imageContext: ./isolated_environment/imagem_for_dockerhub_statusquo/apache
                tags: ${{ env.APACHE }}





                
                