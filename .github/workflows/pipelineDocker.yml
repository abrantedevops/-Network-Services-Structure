name: Build/Deploy to Registry Container

on:
  push:
    branches:
      - dev

jobs:
    Build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Build Docker image for bind-master
              run: docker build -t abrantedevops/network_services_structure:veridis-bind-master ./isolated_environment/imagem_for_dockerhub_veridis/bind9
            
            - name: Build Docker image for bind-slave
              run: docker build -t abrantedevops/network_services_structure:veridis-bind-slave ./isolated_environment/imagem_for_dockerhub_veridis/bind9/slave
           
            - name: Build Docker image for nginx-lan
              run: docker build -t abrantedevops/network_services_structure:veridis-nginx-lan ./isolated_environment/imagem_for_dockerhub_veridis/nginx/lan
       
            - name: Build Docker image for nginx-wan
              run: docker build -t abrantedevops/network_services_structure:veridis-nginx-wan ./isolated_environment/imagem_for_dockerhub_veridis/nginx/wan
      
            - name: Build Docker image for apache
              run: docker build -t abrantedevops/network_services_structure:statusquo-apache ./isolated_environment/imagem_for_dockerhub_statusquo/apache
        
    Test:
        needs: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Run Dockerfile
              run: |
                docker-compose -f ./df-compose/veridis/docker-compose.yml up -d
                docker-compose -f ./df-compose/statusquo/docker-compose.yml up -d

            - name: Setup Python Version
              uses: actions/setup-python@v2
              with:
                python-version: 3.8
              
            - name: Install Python dependencies
              run: python -m pip install --upgrade pip requests
              
            - name: Execute Python Script
              run: |
                python ./test/tveridis.py
                python ./test/tstatusquo.py

    Vulnerability:
        needs: Test
        if: ${{ needs.Build.result == 'success' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Install Trivy
              run: |
                wget https://github.com/aquasecurity/trivy/releases/download/v0.42.1/trivy_0.42.1_Linux-64bit.deb
                sudo dpkg -i trivy_0.42.1_Linux-64bit.deb

            - name: Scan Docker images
              run: |
                trivy image abrantedevops/network_services_structure:veridis-bind-master
                trivy image abrantedevops/network_services_structure:veridis-bind-slave
                trivy image abrantedevops/network_services_structure:veridis-nginx-lan
                trivy image abrantedevops/network_services_structure:veridis-nginx-wan
                trivy image abrantedevops/network_services_structure:statusquo-apache

    Push-Images:
        needs: Vulnerability
        if: ${{ needs.Vulnerability.result == 'success' }}
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3

            - name: Login to DockerHub
              uses: docker/login-action@v2.2.0
              with:
                username: ${{ secrets.USER }}
                password: ${{ secrets.PASS }}

            - name: Push Docker images
              run: |
                docker push abrantedevops/abrantedevops/network_services_structure:veridis-bind-master
                docker push abrantedevops/abrantedevops/network_services_structure:veridis-bind-slave
                docker push abrantedevops/abrantedevops/network_services_structure:veridis-nginx-lan
                docker push abrantedevops/abrantedevops/network_services_structure:veridis-nginx-wan
                docker push abrantedevops/abrantedevops/network_services_structure:statusquo-apache
                