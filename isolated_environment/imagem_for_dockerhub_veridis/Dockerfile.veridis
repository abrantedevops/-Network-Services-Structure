FROM debian:latest

# Install BIND9
RUN apt-get update && apt-get install -y bind9 bind9utils bind9-doc

# Copy the configuration files
COPY ./bind9/named.conf.local /etc/bind/
COPY ./bind9/db.* /etc/bind/

# Define the correct permissions
RUN chown root:bind /etc/bind/named.conf.local
RUN chown bind:bind /etc/bind/db.*

# Expose the port
EXPOSE 53


# Install Nginx
RUN apt-get update && apt-get install -y nginx

# Copy the configuration files
COPY ./nginx/default /etc/nginx/sites-available/

# Define the correct permissions
RUN chown root:root /etc/nginx/sites-available/default

# Create the directory for certificate https in default path nginx
RUN mkdir -p /etc/nginx/certificado

# Create the certificate https
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/certificado/abranteme.key -out /etc/nginx/certificado/abranteme.crt -subj "/C=BR/ST=PB/L=PB/O=Global Security/OU=IT Department/CN=abranteme.com.br"

# Expose the port
EXPOSE 80

# Start all services
CMD service bind9 start && service nginx start && tail -f /dev/null




# Para construir esta imagem do Docker, execute o comando abaixo: 
# docker build -t abrantedevops/network_services_structure:veridis -f Dockerfile.veridis .

# Para verificar se a imagem foi criada, execute o comando abaixo:
# docker images

# Para testar a imagem, pode-se levantar o container com ela:
# docker run -d --name veridis abrantedevops/network_services_structure:veridis
# docker run -d --name veridis -p 53:53 abrantedevops/network_services_structure:veridis

# Para verificar se o container está rodando, execute o comando abaixo:
# docker ps

# Entrando no container e verificar as configurações:
# docker exec -it veridis bash

# Feita todas as configurações, pode-se fazer o push da imagem para o DockerHub:
# docker login
# docker push abrantedevops/network_services_structure:veridis

# Com isso a imagem estará disponível para ser baixada e utilizada em qualquer máquina que tenha o Docker instalado, por exemplo para puxar a imagem do servidor veridis(dns e nginx):
# docker pull abrantedevops/network_services_structure:veridis


# ===================
# Para deleter todas as imagens: docker rmi -f $(docker images -q)
# Para apagar imagens não utilizadas: docker image prune -a

# Para deletar todos os containers: docker rm -f $(docker ps -a -q)
# Para deletar todos os containers que estão parados: docker rm $(docker ps -a -f status=exited -q)